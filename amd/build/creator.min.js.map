{"version":3,"file":"creator.min.js","sources":["../src/creator.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class provides functionality for the testquestion response creator.\n *\n * @module    qtype_pmatch\n * @class     creator\n * @package   question\n * @copyright 2018 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/ajax', 'core/templates', 'core/key_codes'], function($, Str, Ajax, Templates, KeyCodes) {\n    /**\n     * @alias qtype_pmatch/creator\n     */\n    var t = {\n        /**\n         * The id of row will append to Table Response.\n         */\n        newRowId: '',\n        /**\n         * Index of last one in the Table Response.\n         */\n        idxLastRow: 0,\n        /**\n         * The Id of editing question.\n         */\n        questionId: '',\n        /**\n         * Initialise the creator.\n         */\n        init: function() {\n            t.questionId = $('#attemptsform input[name=\"id\"]').val();\n            t.table = $('#responses');\n            t.idxLastRow = t.table.find('tbody tr').length - 1;\n            t.disableControlButtonAndSelectionBox();\n            $('#newresponsebutton').click(function(e) {\n                e.preventDefault();\n                t.idxLastRow++;\n                t.newRowId = 'qtype-pmatch-new-response_' + t.idxLastRow;\n                Templates.render('qtype_pmatch/newresponse', {newrowid: t.newRowId})\n                    .done(function(html) {\n                        t.table.append(html);\n                        $('html, body').animate({\n                            scrollTop: $('#' + t.newRowId).offset().top\n                        }, 800);\n                        $('.new-expectedfraction').focus();\n                        M.core_formchangechecker.set_form_changed();\n                    });\n                t.disableControlButtons(true);\n            });\n\n            var timeoutCheckResponse = null;\n\n            // Check response when key up or paste content.\n            $(document).on('keyup paste', '.new-response', function() {\n                var response = $(this).val().trim();\n\n                if (timeoutCheckResponse) {\n                    M.util.js_complete('checkresponse');\n                    clearTimeout(timeoutCheckResponse);\n                }\n                M.util.js_pending('checkresponse');\n                timeoutCheckResponse = setTimeout(function() {\n                    if (response === '') {\n                        t.handleSaveNewResponseButton(false, '');\n                    } else {\n                        t.checkResponse(response);\n                    }\n                    M.util.js_complete('checkresponse');\n                }, 500);\n            });\n\n            $(document).on('keydown', '.new-response', function(e) {\n                if (e.keyCode == KeyCodes.enter) {\n                    t.saveNewResponse();\n                    return false;\n                }\n            });\n\n            $(document).on('keydown', '.new-expectedfraction, .new-response, .savenewresponse, .cancelnewresponse', function(e) {\n                if (e.keyCode == KeyCodes.escape) {\n                    t.cancelNewResponse();\n                }\n            });\n\n            $(document).on('click', '.savenewresponse', function() {\n                return t.saveNewResponse();\n            });\n            $(document).on('click', '.cancelnewresponse', function() {\n                t.cancelNewResponse();\n            });\n        },\n\n        /**\n         * Submit to save a new response.\n         */\n        saveNewResponse: function() {\n            var response = $('.new-response').val().trim();\n            if (response !== '') {\n                var mark = $('.new-expectedfraction').is(':checked') ? 1 : 0;\n                var promises = Ajax.call([{\n                    methodname: 'qtype_pmatch_create_response',\n                    args: {questionid: t.questionId, expectedfraction: mark, response: response, curentrow: t.idxLastRow}\n                }], true);\n                promises[0]\n                    .done(function(result) {\n                        if (result.status === 'error') {\n                            t.handleSaveNewResponseButton(false, result.message);\n                        } else {\n                            t.disableControlButtons(false);\n                            $('#' + t.newRowId).detach();\n                            t.table.append($(result.html));\n                            var resultssummary = M.util.get_string('testquestionresultssummary', 'qtype_pmatch', result.counts);\n                            $('#testquestion_gradesummary').html(resultssummary);\n                        }\n                    })\n                    .fail(function(response) {\n                        t.handleSaveNewResponseButton(false, response.message);\n                    });\n                t.disableControlButtonAndSelectionBox();\n                t.resetFormState();\n            }\n        },\n\n        /**\n         * Cancel to input a new response.\n         */\n        cancelNewResponse: function() {\n            $('#' + t.newRowId).remove();\n            t.disableControlButtons(false);\n            t.disableControlButtonAndSelectionBox();\n            t.resetFormState();\n            t.idxLastRow--;\n        },\n\n        /**\n         * Function check correct a response.\n         *\n         * @method checkResponse\n         * @param {String} response The response to check.\n         */\n        checkResponse: function(response) {\n            var promises = Ajax.call([{\n                methodname: 'qtype_pmatch_check_response',\n                args: {questionid: t.questionId, response: response}\n            }], true);\n            promises[0]\n                .done(function(result) {\n                    var isCorrectResponse = false;\n                    if (result.status == 'success') {\n                        result.message = '';\n                        isCorrectResponse = true;\n                    }\n                    t.handleSaveNewResponseButton(isCorrectResponse, result.message);\n                })\n                .fail(function(response) {\n                    t.handleSaveNewResponseButton(false, response.message);\n                });\n        },\n\n        /**\n         * Disable or enable for save button when and update the error message.\n         *\n         * @method handleSaveNewResponseButton\n         * @param {Boolean} isCorrectResponse Response input is correct or not.\n         * @param {String} message The message for the error.\n         */\n        handleSaveNewResponseButton: function(isCorrectResponse, message) {\n            if (isCorrectResponse) {\n                $('.savenewresponse').removeAttr('disabled');\n            } else {\n                $('.savenewresponse').attr('disabled', 'true');\n            }\n            $('.response.error').html(message);\n        },\n\n        /**\n         * Function disable or enable the outside table buttons when create new response.\n         *\n         * @method disableControlButtons\n         * @param {Bool} disable true if disable else enable the buttons.\n         */\n        disableControlButtons: function(disable) {\n            if (disable) {\n                $('#newresponsebutton').attr('disabled', 'true');\n                $('#deleteresponsesbutton').attr('disabled', 'true');\n                $('#testresponsesbutton').attr('disabled', 'true');\n            } else {\n                $('#newresponsebutton').removeAttr('disabled');\n                $('#deleteresponsesbutton').removeAttr('disabled');\n                $('#testresponsesbutton').removeAttr('disabled');\n            }\n        },\n\n        /**\n         * Notify user when the form Add new response has changed.\n         */\n        resetFormState: function() {\n            if (M.core_formchangechecker.get_form_dirty_state()) {\n                M.core_formchangechecker.reset_form_dirty_state();\n            }\n        },\n\n        /**\n         * Function disable or enable selection box,delete response button,test response button.\n         *\n         * @method disableControlButtons\n         */\n        disableControlButtonAndSelectionBox: function() {\n            var checkbox = $('#tqheadercheckbox');\n            var table = $('#responses');\n            if (table.find('tbody tr:not(.emptyrow)').length <= 0) {\n                checkbox.attr('disabled', true);\n                $('#deleteresponsesbutton').attr('disabled', 'true');\n                $('#testresponsesbutton').attr('disabled', 'true');\n            } else {\n                checkbox.removeAttr('disabled');\n                $('#deleteresponsesbutton').removeAttr('disabled');\n                $('#testresponsesbutton').removeAttr('disabled');\n            }\n        }\n    };\n    return t;\n});\n"],"names":["define","$","Str","Ajax","Templates","KeyCodes","t","newRowId","idxLastRow","questionId","init","val","table","find","length","disableControlButtonAndSelectionBox","click","e","preventDefault","render","newrowid","done","html","append","animate","scrollTop","offset","top","focus","M","core_formchangechecker","set_form_changed","disableControlButtons","timeoutCheckResponse","document","on","response","this","trim","util","js_complete","clearTimeout","js_pending","setTimeout","handleSaveNewResponseButton","checkResponse","keyCode","enter","saveNewResponse","escape","cancelNewResponse","mark","is","call","methodname","args","questionid","expectedfraction","curentrow","result","status","message","detach","resultssummary","get_string","counts","fail","resetFormState","remove","isCorrectResponse","removeAttr","attr","disable","get_form_dirty_state","reset_form_dirty_state","checkbox"],"mappings":"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"}