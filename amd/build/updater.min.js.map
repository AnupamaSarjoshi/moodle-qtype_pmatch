{"version":3,"file":"updater.min.js","sources":["../src/updater.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This class provides functionality for the testquestion response updater.\n *\n * @module    qtype_pmatch\n * @class     updater\n * @copyright 2016 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification'], function($, Notification) {\n    /**\n     * @alias qtype_pmatch/updater\n     */\n    const t = {\n        baseUrl: '',\n        sessKey: '',\n        qid: '',\n        headerCheckboxChecked: true,\n        /**\n         *  The string need to be replaced to get correct row.\n         */\n        REPLACESTRING: /qtype-pmatch-testquestion_r/g,\n        /**\n         * Initialise the updater.\n         */\n        init: function() {\n            const base = $('#attemptsform').attr('action');\n            const body = $('body');\n            t.baseUrl = base.replace('testquestion.php', 'api/updater.php');\n            t.sessKey = $('#attemptsform input[name=\"sesskey\"]').val();\n            t.qid = $('#attemptsform input[name=\"id\"]').val();\n            $(document).on('click', '.updater-ef', function() {\n                const id = $(this).data('id');\n                t.update(id);\n                return false;\n            });\n            // Prevent the form submit when user press enter on checkbox.\n            $(document).on('keypress', '#tablecontainer :checkbox', function(e) {\n                if ((e.keyCode ? e.keyCode : e.which) === 13) {\n                    e.preventDefault();\n                    $(this).trigger('click');\n                }\n            });\n            $('#tqheadercheckbox').click(function() {\n                if (t.headerCheckboxChecked) {\n                    $(this).attr('title', M.util.get_string('deselectall', 'moodle'));\n                    t.headerCheckboxChecked = false;\n                } else {\n                    $(this).attr('title', M.util.get_string('selectall', 'moodle'));\n                    t.headerCheckboxChecked = true;\n                }\n                $('#tablecontainer :checkbox').each(function() {\n                    this.checked = !t.headerCheckboxChecked;\n                });\n                $(this).prop('checked', false);\n            });\n\n            body.on('updatefailed', '[data-inplaceeditable]', function(e) {\n                const exception = e.exception;\n                e.preventDefault();\n                Notification.alert(M.util.get_string('error:title', 'qtype_pmatch'),\n                    exception.message, M.util.get_string('ok', 'moodle'));\n            });\n            body.on('updated', '[data-inplaceeditable]', function(e) {\n                t.handleUpdated(e, this);\n            });\n            t.bindInplaceEditEvent();\n        },\n        /**\n         * If there is no row in table, bind core/inplace_editable to the page.\n         */\n        bindInplaceEditEvent: function() {\n            if ($('#qtype-pmatch-testquestion_r0').hasClass('emptyrow')) {\n                require(['core/inplace_editable']);\n            }\n        },\n        /**\n         * Handle updated inplace-editable data returned.\n         * @param {object} e the event handlers.\n         * @param {object} target the DOM element.\n         */\n        handleUpdated: function(e, target) {\n            const ajaxReturn = e.ajaxreturn;\n            if (ajaxReturn.value !== e.oldvalue) {\n                const jsonDecode = $.parseJSON(ajaxReturn.value);\n                const row = $(target).parent().parent();\n                const currentRow = row.attr('id');\n                const html = jsonDecode.html;\n                $(row).replaceWith(html.replace(t.REPLACESTRING, currentRow));\n                $('#testquestion_gradesummary').html(jsonDecode.summary);\n            }\n        },\n        update: function(id) {\n            const val = $('#updater-ef_' + id).text();\n            const ef = (val === '1') ? 0 : 1;\n            // Send update.\n            const data = {qid: t.qid, rid: id, expectedfraction: ef, sesskey: t.sessKey};\n            $.post(t.baseUrl, data, function(result) {\n                if (result.status === 'success') {\n                    // Update the ui.\n                    const updater = $('#updater-ef_' + id);\n                    updater.text(result.ef);\n                    updater.parent().prev().text(result.gf);\n\n                    const tr = updater.parent().parent();\n                    tr.removeClass();\n                    tr.addClass(result.rowclass);\n                    tr.find('td[class=\"c3\"]').text(result.gf);\n                    // Update the grade summary.\n\n                    const c = M.util.get_string('testquestionresultssummary', 'qtype_pmatch', result.counts);\n                    $('#testquestion_gradesummary').html(c);\n                } else {\n                    // Developer debugging - failure states are in api/updater.php.\n                    window.console.log(\n                        'Testquestion response updater has experienced an issue.\\n' + result.data);\n                    // If spinner is added - remove it here $('#updater-ef_' + id).text(val);.\n                }\n            });\n        }\n    };\n\n    return t;\n});\n"],"names":["define","$","Notification","t","baseUrl","sessKey","qid","headerCheckboxChecked","REPLACESTRING","init","base","attr","body","replace","val","document","on","id","this","data","update","e","keyCode","which","preventDefault","trigger","click","M","util","get_string","each","checked","prop","exception","alert","message","handleUpdated","bindInplaceEditEvent","hasClass","require","target","ajaxReturn","ajaxreturn","value","oldvalue","jsonDecode","parseJSON","row","parent","currentRow","html","replaceWith","summary","ef","text","rid","expectedfraction","sesskey","post","result","status","updater","prev","gf","tr","removeClass","addClass","rowclass","find","c","counts","window","console","log"],"mappings":";;;;;;;;AAuBAA,8BAAO,CAAC,SAAU,sBAAsB,SAASC,EAAGC,oBAI1CC,EAAI,CACNC,QAAS,GACTC,QAAS,GACTC,IAAK,GACLC,uBAAuB,EAIvBC,cAAe,+BAIfC,KAAM,iBACIC,KAAOT,EAAE,iBAAiBU,KAAK,UAC/BC,KAAOX,EAAE,QACfE,EAAEC,QAAUM,KAAKG,QAAQ,mBAAoB,mBAC7CV,EAAEE,QAAUJ,EAAE,uCAAuCa,MACrDX,EAAEG,IAAML,EAAE,kCAAkCa,MAC5Cb,EAAEc,UAAUC,GAAG,QAAS,eAAe,iBAC7BC,GAAKhB,EAAEiB,MAAMC,KAAK,aACxBhB,EAAEiB,OAAOH,KACF,KAGXhB,EAAEc,UAAUC,GAAG,WAAY,6BAA6B,SAASK,GACnB,MAArCA,EAAEC,QAAUD,EAAEC,QAAUD,EAAEE,SAC3BF,EAAEG,iBACFvB,EAAEiB,MAAMO,QAAQ,aAGxBxB,EAAE,qBAAqByB,OAAM,WACrBvB,EAAEI,uBACFN,EAAEiB,MAAMP,KAAK,QAASgB,EAAEC,KAAKC,WAAW,cAAe,WACvD1B,EAAEI,uBAAwB,IAE1BN,EAAEiB,MAAMP,KAAK,QAASgB,EAAEC,KAAKC,WAAW,YAAa,WACrD1B,EAAEI,uBAAwB,GAE9BN,EAAE,6BAA6B6B,MAAK,gBAC3BC,SAAW5B,EAAEI,yBAEtBN,EAAEiB,MAAMc,KAAK,WAAW,MAG5BpB,KAAKI,GAAG,eAAgB,0BAA0B,SAASK,SACjDY,UAAYZ,EAAEY,UACpBZ,EAAEG,iBACFtB,aAAagC,MAAMP,EAAEC,KAAKC,WAAW,cAAe,gBAChDI,UAAUE,QAASR,EAAEC,KAAKC,WAAW,KAAM,cAEnDjB,KAAKI,GAAG,UAAW,0BAA0B,SAASK,GAClDlB,EAAEiC,cAAcf,EAAGH,SAEvBf,EAAEkC,wBAKNA,qBAAsB,WACdpC,EAAE,iCAAiCqC,SAAS,aAC5CC,QAAQ,CAAC,2BAQjBH,cAAe,SAASf,EAAGmB,cACjBC,WAAapB,EAAEqB,cACjBD,WAAWE,QAAUtB,EAAEuB,SAAU,OAC3BC,WAAa5C,EAAE6C,UAAUL,WAAWE,OACpCI,IAAM9C,EAAEuC,QAAQQ,SAASA,SACzBC,WAAaF,IAAIpC,KAAK,MACtBuC,KAAOL,WAAWK,KACxBjD,EAAE8C,KAAKI,YAAYD,KAAKrC,QAAQV,EAAEK,cAAeyC,aACjDhD,EAAE,8BAA8BiD,KAAKL,WAAWO,WAGxDhC,OAAQ,SAASH,UAEPoC,GAAc,MADRpD,EAAE,eAAiBgB,IAAIqC,OACR,EAAI,EAEzBnC,KAAO,CAACb,IAAKH,EAAEG,IAAKiD,IAAKtC,GAAIuC,iBAAkBH,GAAII,QAAStD,EAAEE,SACpEJ,EAAEyD,KAAKvD,EAAEC,QAASe,MAAM,SAASwC,WACP,YAAlBA,OAAOC,OAAsB,OAEvBC,QAAU5D,EAAE,eAAiBgB,IACnC4C,QAAQP,KAAKK,OAAON,IACpBQ,QAAQb,SAASc,OAAOR,KAAKK,OAAOI,UAE9BC,GAAKH,QAAQb,SAASA,SAC5BgB,GAAGC,cACHD,GAAGE,SAASP,OAAOQ,UACnBH,GAAGI,KAAK,kBAAkBd,KAAKK,OAAOI,UAGhCM,EAAI1C,EAAEC,KAAKC,WAAW,6BAA8B,eAAgB8B,OAAOW,QACjFrE,EAAE,8BAA8BiD,KAAKmB,QAGrCE,OAAOC,QAAQC,IACX,4DAA8Dd,OAAOxC,kBAOlFhB"}