define("qtype_pmatch/populate_placeholder",["exports"],(function(_exports){function updatePlaceholders(modelAnswer,placeholderInputs,originalPlaceholders){const modelAnswerLength=function(text){let textWithoutHtml=text.replace(/<\/?sub>|<\/?sup>/g,"");return textWithoutHtml=textWithoutHtml.trimEnd(),textWithoutHtml.length+2}(modelAnswer.value);placeholderInputs.forEach(((input,index)=>{
/**
   * This file is part of Moodle - http://moodle.org/
   *
   * Moodle is free software: you can redistribute it and/or modify
   * it under the terms of the GNU General Public License as published by
   * the Free Software Foundation, either version 3 of the License, or
   * (at your option) any later version.
   *
   * Moodle is distributed in the hope that it will be useful,
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   * GNU General Public License for more details.
   *
   * You should have received a copy of the GNU General Public License
   * along with Moodle. If not, see <http://www.gnu.org/licenses/>.
   *
   * @module    qtype_pmatch
   * @class     populate_placeholder
   * @copyright 2024 The Open University
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */
var originalPlaceholder,newLength;/^_+$/.test(originalPlaceholders[index])?input.value="_".repeat(modelAnswerLength):input.value=(originalPlaceholder=originalPlaceholders[index],newLength=modelAnswerLength,originalPlaceholder.replace(/(_+)?(\d+)(x+\d+)?(_+)?/,"$1".concat(newLength,"$3$4")))}))}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=fieldNamePrefix=>{const modelAnswer=document.querySelector('[name="'+fieldNamePrefix+'modelanswer"]'),placeholderInputs=document.querySelectorAll('[name="'+fieldNamePrefix+'placeholder"]'),originalPlaceholders=Array.from(placeholderInputs,(input=>input.value));0!==modelAnswer.value.length&&updatePlaceholders(modelAnswer,placeholderInputs,originalPlaceholders),modelAnswer.addEventListener("keyup",(()=>{modelAnswer.value.length>0&&!/^\s*$/.test(modelAnswer.value)?updatePlaceholders(modelAnswer,placeholderInputs,originalPlaceholders):function(placeholderInputs,originalPlaceholders){placeholderInputs.forEach(((input,index)=>{input.value=originalPlaceholders[index]}))}(placeholderInputs,originalPlaceholders)}))}}));

//# sourceMappingURL=populate_placeholder.min.js.map